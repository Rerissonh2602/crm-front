@use 'sass:map';
@use '@angular/material' as mat;
@use 'user-themes' as userThemes;

/* Set the base colors for light themes */
$light-base: (
  foreground: (
    base: #000000,
    divider: #DCE0E4,
    dividers: #DCE0E4,
    disabled: #94a3b8,
    disabled-button: #94a3b8,
    disabled-text: #94a3b8,
    elevation: #000000,
    hint-text: #94a3b8,
    secondary-text: #64748b,
    icon: #05603B,
    icons: #05603B,
    mat-icon: #05603B,
    text: #1e293b,
    slider-min: #1e293b,
    slider-off: #cbd5e1,
    slider-off-active: #94a3b8,
  ),
  background: (
    status-bar: #cbd5e1,
    app-bar: #ffffff,
    background: #f9f9f9,
    hover: rgba(148, 163, 184, 0.12),
    card: #ffffff,
    dialog: #ffffff,
    disabled-button: rgba(148, 163, 184, 0.38),
    raised-button: #ffffff,
    focused-button: #64748b,
    selected-button: #e2e8f0,
    selected-disabled-button: #e2e8f0,
    disabled-button-toggle: #cbd5e1,
    unselected-chip: #e2e8f0,
    disabled-list-option: #cbd5e1,
    tooltip: #1e293b,
  ),
);

/* Set the base colors for dark themes */
$dark-base: (
  foreground: (
    base: #ffffff,
    divider: #404040,
    dividers: #404040,
    disabled: #475569,
    disabled-button: #1e293b,
    disabled-text: #475569,
    elevation: #000000,
    hint-text: #64748b,
    secondary-text: #94a3b8,
    icon: #f1f5f9,
    icons: #f1f5f9,
    mat-icon: #94a3b8,
    text: #ffffff,
    slider-min: #ffffff,
    slider-off: #64748b,
    slider-off-active: #94a3b8,
  ),
  background: (
    status-bar: #101010,
    app-bar: #101010,
    background: #101010,
    hover: rgba(255, 255, 255, 0.05),
    card: #101010,
    dialog: #101010,
    disabled-button: rgba(15, 23, 42, 0.38),
    raised-button: #101010,
    focused-button: #e2e8f0,
    selected-button: rgba(255, 255, 255, 0.05),
    selected-disabled-button: #101010,
    disabled-button-toggle: #101010,
    unselected-chip: #475569,
    disabled-list-option: #e2e8f0,
    tooltip: #64748b,
  ),
);

/* Include the core Angular Material styles */
@include mat.core();

/* Create a base theme without any color to set the density and typography */
@include mat.all-component-themes(
    (
      color: null,
      density: 0,
      typography:
      mat.define-typography-config(
        $font-family: theme('fontFamily.sans'),
        $headline-1:
          mat.define-typography-level(
              1.875rem,
              2.25rem,
              800,
              theme('fontFamily.sans')
          ),
        $headline-2:
          mat.define-typography-level(
              1.25rem,
              1.75rem,
              700,
              theme('fontFamily.sans')
          ),
        $headline-3:
          mat.define-typography-level(
              1.125rem,
              1.75rem,
              600,
              theme('fontFamily.sans')
          ),
        $headline-4:
          mat.define-typography-level(
              0.875rem,
              1.25rem,
              600,
              theme('fontFamily.sans')
          ),
        $headline-5:
          mat.define-typography-level(
              0.875rem,
              1.5rem,
              400,
              theme('fontFamily.sans')
          ),
        $headline-6:
          mat.define-typography-level(
              0.875rem,
              1.5rem,
              400,
              theme('fontFamily.sans')
          ),
        $subtitle-1:
          mat.define-typography-level(
              1rem,
              1.75rem,
              400,
              theme('fontFamily.sans')
          ),
        $subtitle-2:
          mat.define-typography-level(
              0.875rem,
              1.25rem,
              600,
              theme('fontFamily.sans')
          ),
        $body-1:
          mat.define-typography-level(
              0.875rem,
              1.5rem,
              400,
              theme('fontFamily.sans')
          ),
        $body-2:
          mat.define-typography-level(
              0.875rem,
              1.5rem,
              400,
              theme('fontFamily.sans')
          ),
        $caption:
          mat.define-typography-level(
              0.75rem,
              1rem,
              400,
              theme('fontFamily.sans')
          ),
        $button:
          mat.define-typography-level(
              0.875rem,
              0.875rem,
              500,
              theme('fontFamily.sans')
          ),
        $overline:
          mat.define-typography-level(
              0.75rem,
              2rem,
              500,
              theme('fontFamily.sans')
          )
      ),
    )
);

/* Loop through user themes and generate Angular Material themes */
@each $name, $theme in userThemes.$user-themes {
  /* Generate the palettes */
  $palettes: ();
  @each $name in (primary, accent, warn) {
    /* Define the Angular Material theme */
    $palette: mat.define-palette(map.get($theme, $name));

    /* Replace the default colors on the defined Material palette */
    $palette: map.merge(
        $palette,
        (
          default: map.get(map.get($theme, $name), DEFAULT),
          lighter: map.get(map.get($theme, $name), 100),
          darker: map.get(map.get($theme, $name), 700),
          text: map.get(map.get($theme, $name), DEFAULT),
          default-contrast:
          map.get(map.get(map.get($theme, $name), contrast), DEFAULT),
          lighter-contrast:
          map.get(map.get(map.get($theme, $name), contrast), 100),
          darker-contrast:
          map.get(map.get(map.get($theme, $name), contrast), 700),
        )
    );

    $palettes: map.merge($palettes, (#{$name}: $palette));
  }

  /* Define a light & dark Angular Material theme with the generated palettes */
  $light-theme: mat.define-light-theme(
      (
        color: $palettes,
      )
  );

  $dark-theme: mat.define-dark-theme(
      (
        color: $palettes,
      )
  );

  /* Merge the custom base colors with the generated themes */
  $light-theme-colors: map.merge(map.get($light-theme, color), $light-base);
  $light-theme: map.merge(
      (
        color: $light-theme-colors,
      ),
      $light-theme-colors
  );

  $dark-theme-colors: map.merge(map.get($dark-theme, color), $dark-base);
  $dark-theme: map.merge(
      (
        color: $dark-theme-colors,
      ),
      $dark-theme-colors
  );

  /* Generate and encapsulate Angular Material themes */
  #{map.get($theme, selector)} .light,
  #{map.get($theme, selector)}.light {
    @include mat.all-component-colors($light-theme);
  }

  #{map.get($theme, selector)} .dark,
  #{map.get($theme, selector)}.dark {
    @include mat.all-component-colors($dark-theme);
  }
}
